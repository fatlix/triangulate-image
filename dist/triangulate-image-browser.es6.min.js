var clamp=(t,e,a)=>t<e?e:t>a?a:t,clone=t=>{let e=!1;if(void 0!==t)try{e=JSON.parse(JSON.stringify(t))}catch(t){}return e};class Canvas{constructor(t=300,e=150){"undefined"==typeof window?(this.canvasEl={width:t,height:e},this.ctx=null):(this.canvasEl=document.createElement("canvas"),this.canvasEl.width=t,this.canvasEl.height=e,this.ctx=this.canvasEl.getContext("2d"))}getContext(){return this.ctx}toDataURL(t,e,a){if("function"!=typeof a)return this.canvasEl.toDataURL(t,e);a(this.canvasEl.toDataURL(t,e))}get width(){return this.canvasEl.width}set width(t){this.canvasEl.width=t}get height(){return this.canvasEl.height}set height(t){this.canvasEl.height=t}}"undefined"!=typeof window&&(Canvas.Image=Image);var makeCanvasAndContext=(t,e,a,n)=>{const r=!(!e||!e.backgroundColor)&&e.backgroundColor,o=new Canvas(t.width*a,t.height*a,n),i=o.getContext("2d");return r&&(i.fillStyle=r,i.fillRect(0,0,t.width*a,t.height*a),i.fillStyle="transparent"),{canvas:o,ctx:i}},toColor=t=>{const e=makeCanvasAndContext({width:1,height:1},{},1,!0).ctx;e.fillStyle=t,e.fillRect(0,0,1,1);const a=e.getImageData(0,0,1,1).data;return{r:a[0],g:a[1],b:a[2],a:a[3]/255}},defaultParams={accuracy:.7,blur:4,fill:!0,stroke:!0,strokeWidth:.5,lineJoin:"miter",vertexCount:700,threshold:50,transparentColor:!1};let allowedLineJoins=["miter","round","bevel"];var sanitizeInput=t=>("object"!=typeof(t=clone(t))&&(t={}),"number"!=typeof t.accuracy||isNaN(t.accuracy)?t.accuracy=defaultParams.accuracy:t.accuracy=clamp(t.accuracy,0,1),("number"!=typeof t.blur||isNaN(t.blur))&&(t.blur=defaultParams.blur),t.blur<=0&&(t.blur=1),"string"!=typeof t.fill&&"boolean"!=typeof t.fill&&(t.fill=defaultParams.fill),"string"!=typeof t.stroke&&"boolean"!=typeof t.stroke&&(t.stroke=defaultParams.stroke),("number"!=typeof t.strokeWidth||isNaN(t.strokeWidth))&&(t.strokeWidth=defaultParams.strokeWidth),"number"!=typeof t.threshold||isNaN(t.threshold)?t.threshold=defaultParams.threshold:t.threshold=clamp(t.threshold,1,100),"string"==typeof t.lineJoin&&-1!==allowedLineJoins.indexOf(t.lineJoin)||(t.lineJoin=defaultParams.lineJoin),t.gradients&&t.fill?t.gradients=!0:t.gradients=!1,t.gradients&&(("number"!=typeof t.gradientStops||isNaN(t.gradientStops)||t.gradientStops<2)&&(t.gradientStops=2),t.gradientStops=Math.round(t.gradientStops)),("number"!=typeof t.vertexCount||isNaN(t.vertexCount))&&(t.vertexCount=defaultParams.vertexCount),t.vertexCount<=0&&(t.vertexCount=1),"string"!=typeof t.transparentColor&&"boolean"!=typeof t.transparentColor&&(t.transparentColor=defaultParams.transparentColor),!0===typeof t.transparentColor&&(t.transparentColor=!1),"string"==typeof t.transparentColor&&(t.transparentColor=toColor(t.transparentColor)),t),fromImageToImageData=t=>{if(t instanceof HTMLImageElement){if(!t.naturalWidth||!t.naturalHeight||!1===t.complete)throw new Error("This this image hasn't finished loading: "+t.src);const e=new Canvas(t.naturalWidth,t.naturalHeight),a=e.getContext("2d");a.drawImage(t,0,0,e.width,e.height);const n=a.getImageData(0,0,e.width,e.height);return n.data&&n.data.length&&(void 0===n.width&&(n.width=t.naturalWidth),void 0===n.height&&(n.height=t.naturalHeight)),n}throw new Error("This object does not seem to be an image.")};const objectAssign=Object.assign;var toRGBA=t=>{const e=objectAssign({a:1},t);return`rgba(${e.r}, ${e.g}, ${e.b}, ${e.a})`},drawPolygonsOnContext=(t,e,a,n)=>(n=n||1,e.forEach(function(e,a){if(t.beginPath(),t.moveTo(e.a.x*n,e.a.y*n),t.lineTo(e.b.x*n,e.b.y*n),t.lineTo(e.c.x*n,e.c.y*n),t.lineTo(e.a.x*n,e.a.y*n),e.gradient){const a=t.createLinearGradient(e.gradient.x1*n,e.gradient.y1*n,e.gradient.x2*n,e.gradient.y2*n),r=e.gradient.colors.length-1;e.gradient.colors.forEach((t,e)=>{const n=toRGBA(t);console.log(t),a.addColorStop(e/r,n)}),t.fillStyle=a,t.fill(),e.strokeWidth>0&&(t.strokeStyle=a,t.lineWidth=e.strokeWidth*n,t.lineJoin=e.lineJoin,t.stroke())}else e.fill&&(t.fillStyle=toRGBA(e.fill),t.fill()),e.strokeColor&&(t.strokeStyle=toRGBA(e.strokeColor),t.lineWidth=e.strokeWidth*n,t.lineJoin=e.lineJoin,t.stroke());t.closePath()}),t),polygonsToImageData=(t,e,a)=>{const n=a&&a.dpr?a.dpr:1,r=makeCanvasAndContext(e,a,n,!0).ctx;return drawPolygonsOnContext(r,t,e,n),r.getImageData(0,0,e.width*n,e.height*n)},polygonsToDataURL=(t,e,a)=>{const n=a&&a.dpr?a.dpr:1,r=makeCanvasAndContext(e,a,n);return drawPolygonsOnContext(r.ctx,t,e,n),r.canvas.toDataURL()};function componentToHex(t){const e=t.toString(16);return 1==e.length?"0"+e:e}function toHex({r:t,g:e,b:a}){return"#"+componentToHex(t)+componentToHex(e)+componentToHex(a)}var polygonsToSVG=(t,e)=>{let a="";t.length&&t[0].gradient&&(a="<defs>");let n="";return t.forEach(function(t,e){const{a:r,b:o,c:i}=t;if(n+=`<polygon points="${r.x},${r.y} ${o.x},${o.y} ${i.x},${i.y}"`,t.gradient){const r=t.boundingBox,o=((t.gradient.x1-r.x)/r.width*100).toFixed(3),i=((t.gradient.y1-r.y)/r.height*100).toFixed(3),s=((t.gradient.x2-r.x)/r.width*100).toFixed(3),l=((t.gradient.y2-r.y)/r.height*100).toFixed(3);a+=`\n\t<linearGradient id="gradient-${e}" x1="${o}%" y1="${i}%" x2="${s}%" y2="${l}%">`;const h=t.gradient.colors.length-1;t.gradient.colors.forEach((t,e)=>{const n=toHex(t),r=t.a<1?' stop-opacity="'+t.a+'"':"",o=(e/h*100).toFixed(3);a+=`\n\t\t\t\t\t<stop offset="${o}%" stop-color="${n}"${r}/>\n\t\t\t\t`}),a+="</linearGradient>",n+=` fill="url(#gradient-${e})"`,t.strokeWidth>0&&(n+=` stroke="url(#gradient-${e})" stroke-width="${t.strokeWidth}" stroke-linejoin="${t.lineJoin}"`)}else{if(t.fill){const e=toHex(t.fill),a=t.fill.a<1?` fill-opacity="${t.fill.a}"`:"";n+=` fill="${e}"${a}`}else n+=' fill="transparent"';if(t.strokeColor){const e=toHex(t.strokeColor),a=t.strokeColor.a<1?` stroke-opacity="${t.strokeColor.a}"`:"";n+=` stroke="${e}" stroke-width="${t.strokeWidth}" stroke-linejoin="${t.lineJoin}"${a}`}}n+="/>\n\t"}),a.length&&(a+="\n\t\t</defs>"),`<?xml version="1.0" standalone="yes"?>\n<svg width="${e.width}" height="${e.height}" xmlns="http://www.w3.org/2000/svg" version="1.1" >\n\t${a}\n\t${n}\n</svg>`};function createCommonjsModule(t,e){return t(e={exports:{}},e.exports),e.exports}var delaunay=createCommonjsModule(function(t){function e(t,e,a){this.a=t,this.b=e,this.c=a;var n,r,o,i,s=e.x-t.x,l=e.y-t.y,h=a.x-t.x,d=a.y-t.y,g=s*(t.x+e.x)+l*(t.y+e.y),c=h*(t.x+a.x)+d*(t.y+a.y),u=2*(s*(a.y-e.y)-l*(a.x-e.x));Math.abs(u)<1e-6?(n=Math.min(t.x,e.x,a.x),r=Math.min(t.y,e.y,a.y),o=.5*(Math.max(t.x,e.x,a.x)-n),i=.5*(Math.max(t.y,e.y,a.y)-r),this.x=n+o,this.y=r+i,this.r=o*o+i*i):(this.x=(d*g-l*c)/u,this.y=(s*c-h*g)/u,o=this.x-t.x,i=this.y-t.y,this.r=o*o+i*i)}function a(t,e){return e.x-t.x}function n(t){var e,a,n,r,o,i=t.length;t:for(;i;)for(a=t[--i],e=t[--i],n=i;n;)if(o=t[--n],e===(r=t[--n])&&a===o||e===o&&a===r){t.splice(i,2),t.splice(n,2),i-=2;continue t}}e.prototype.draw=function(t){t.beginPath(),t.moveTo(this.a.x,this.a.y),t.lineTo(this.b.x,this.b.y),t.lineTo(this.c.x,this.c.y),t.closePath(),t.stroke()},t.exports={Triangle:e,triangulate:function(t){if(t.length<3)return[];t.sort(a);for(var r=t.length-1,o=t[r].x,i=t[0].x,s=t[r].y,l=s;r--;)t[r].y<s&&(s=t[r].y),t[r].y>l&&(l=t[r].y);var h,d,g,c=i-o,u=l-s,y=c>u?c:u,f=.5*(i+o),p=.5*(l+s),m=[new e({x:f-20*y,y:p-y,__sentinel:!0},{x:f,y:p+20*y,__sentinel:!0},{x:f+20*y,y:p-y,__sentinel:!0})],x=[],b=[];for(r=t.length;r--;){for(b.length=0,h=m.length;h--;)(c=t[r].x-m[h].x)>0&&c*c>m[h].r?(x.push(m[h]),m.splice(h,1)):c*c+(u=t[r].y-m[h].y)*u>m[h].r||(b.push(m[h].a,m[h].b,m[h].b,m[h].c,m[h].c,m[h].a),m.splice(h,1));for(n(b),h=b.length;h;)g=b[--h],d=b[--h],m.push(new e(d,g,t[r]))}for(Array.prototype.push.apply(x,m),r=x.length;r--;)(x[r].a.__sentinel||x[r].b.__sentinel||x[r].c.__sentinel)&&x.splice(r,1);return x}}}),delaunay_1=delaunay.Triangle,delaunay_2=delaunay.triangulate,sobel=createCommonjsModule(function(t,e){!function(a){function n(t){if(!(this instanceof n))return new n(t);var e=t.width,a=t.height,r=[[-1,0,1],[-2,0,2],[-1,0,1]],o=[[-1,-2,-1],[0,0,0],[1,2,1]],i=[],s=[];function l(t){return function(a,n,r){return t[4*(e*n+a)+(r=r||0)]}}var h,d,g=l(t.data);for(d=0;d<a;d++)for(h=0;h<e;h++){var c=(g(h,d,0)+g(h,d,1)+g(h,d,2))/3;s.push(c,c,c,255)}for(g=l(s),d=0;d<a;d++)for(h=0;h<e;h++){var u=r[0][0]*g(h-1,d-1)+r[0][1]*g(h,d-1)+r[0][2]*g(h+1,d-1)+r[1][0]*g(h-1,d)+r[1][1]*g(h,d)+r[1][2]*g(h+1,d)+r[2][0]*g(h-1,d+1)+r[2][1]*g(h,d+1)+r[2][2]*g(h+1,d+1),y=o[0][0]*g(h-1,d-1)+o[0][1]*g(h,d-1)+o[0][2]*g(h+1,d-1)+o[1][0]*g(h-1,d)+o[1][1]*g(h,d)+o[1][2]*g(h+1,d)+o[2][0]*g(h-1,d+1)+o[2][1]*g(h,d+1)+o[2][2]*g(h+1,d+1),f=Math.sqrt(u*u+y*y)>>>0;i.push(f,f,f,255)}var p=i;return"function"==typeof Uint8ClampedArray&&(p=new Uint8ClampedArray(i)),p.toImageData=function(){return n.toImageData(p,e,a)},p}function r(t,e,a){return{width:e,height:a,data:t}}n.toImageData=function(t,e,a){if("function"==typeof ImageData&&"[object Uint16Array]"===Object.prototype.toString.call(t))return new ImageData(t,e,a);if("object"==typeof window&&"object"==typeof window.document){var n=document.createElement("canvas");if("function"==typeof n.getContext){var o=n.getContext("2d").createImageData(e,a);return o.data.set(t),o}return new r(t,e,a)}return new r(t,e,a)},t.exports&&(e=t.exports=n),e.Sobel=n}()}),sobel_1=sobel.Sobel,isImageData=t=>t&&"number"==typeof t.width&&"number"==typeof t.height&&t.data&&"number"==typeof t.data.length&&"object"==typeof t.data,copyImageData=t=>{if(isImageData(t)){if("undefined"==typeof Uint8ClampedArray){if("undefined"==typeof window)throw new Error("Can't copy imageData in webworker without Uint8ClampedArray support.");return copyImageDataWithCanvas(t)}{const e=new Uint8ClampedArray(t.data);if("undefined"==typeof ImageData)return{width:t.width,height:t.height,data:e};{let a;try{a=new ImageData(e,t.width,t.height)}catch(e){if("undefined"==typeof window)throw new Error("Can't copy imageData in webworker without proper ImageData() support.");a=copyImageDataWithCanvas(t)}return a}}}throw new Error("Given imageData object is not useable.")};function copyImageDataWithCanvas(t){const e=new Canvas(t.width,t.height).getContext("2d");return e.putImageData(t,0,0),e.getImageData(0,0,t.width,t.height)}const mul_table=[512,512,456,512,328,456,335,512,405,328,271,456,388,335,292,512,454,405,364,328,298,271,496,456,420,388,360,335,312,292,273,512,482,454,428,405,383,364,345,328,312,298,284,271,259,496,475,456,437,420,404,388,374,360,347,335,323,312,302,292,282,273,265,512,497,482,468,454,441,428,417,405,394,383,373,364,354,345,337,328,320,312,305,298,291,284,278,271,265,259,507,496,485,475,465,456,446,437,428,420,412,404,396,388,381,374,367,360,354,347,341,335,329,323,318,312,307,302,297,292,287,282,278,273,269,265,261,512,505,497,489,482,475,468,461,454,447,441,435,428,422,417,411,405,399,394,389,383,378,373,368,364,359,354,350,345,341,337,332,328,324,320,316,312,309,305,301,298,294,291,287,284,281,278,274,271,268,265,262,259,257,507,501,496,491,485,480,475,470,465,460,456,451,446,442,437,433,428,424,420,416,412,408,404,400,396,392,388,385,381,377,374,370,367,363,360,357,354,350,347,344,341,338,335,332,329,326,323,320,318,315,312,310,307,304,302,299,297,294,292,289,287,285,282,280,278,275,273,271,269,267,265,263,261,259],shg_table=[9,11,12,13,13,14,14,15,15,15,15,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24];function BlurStack(){this.r=0,this.g=0,this.b=0,this.a=0,this.next=null}var stackblur=(t,e,a,n,r,o)=>{var i,s,l,h,d,g,c,u,y,f,p,m,x,b,w,C,v,D,T,I,P,k,_,E,W=t.data,M=o+o+1,S=n-1,B=r-1,J=o+1,$=J*(J+1)/2,A=new BlurStack,j=A;for(l=1;l<M;l++)if(j=j.next=new BlurStack,l==J)var L=j;j.next=A;var U=null,O=null;c=g=0;var V=mul_table[o],R=shg_table[o];for(s=0;s<r;s++){for(C=v=D=T=u=y=f=p=0,m=J*(I=W[g]),x=J*(P=W[g+1]),b=J*(k=W[g+2]),w=J*(_=W[g+3]),u+=$*I,y+=$*P,f+=$*k,p+=$*_,j=A,l=0;l<J;l++)j.r=I,j.g=P,j.b=k,j.a=_,j=j.next;for(l=1;l<J;l++)h=g+((S<l?S:l)<<2),u+=(j.r=I=W[h])*(E=J-l),y+=(j.g=P=W[h+1])*E,f+=(j.b=k=W[h+2])*E,p+=(j.a=_=W[h+3])*E,C+=I,v+=P,D+=k,T+=_,j=j.next;for(U=A,O=L,i=0;i<n;i++)W[g+3]=_=p*V>>R,0!=_?(_=255/_,W[g]=(u*V>>R)*_,W[g+1]=(y*V>>R)*_,W[g+2]=(f*V>>R)*_):W[g]=W[g+1]=W[g+2]=0,u-=m,y-=x,f-=b,p-=w,m-=U.r,x-=U.g,b-=U.b,w-=U.a,h=c+((h=i+o+1)<S?h:S)<<2,u+=C+=U.r=W[h],y+=v+=U.g=W[h+1],f+=D+=U.b=W[h+2],p+=T+=U.a=W[h+3],U=U.next,m+=I=O.r,x+=P=O.g,b+=k=O.b,w+=_=O.a,C-=I,v-=P,D-=k,T-=_,O=O.next,g+=4;c+=n}for(i=0;i<n;i++){for(v=D=T=C=y=f=p=u=0,m=J*(I=W[g=i<<2]),x=J*(P=W[g+1]),b=J*(k=W[g+2]),w=J*(_=W[g+3]),u+=$*I,y+=$*P,f+=$*k,p+=$*_,j=A,l=0;l<J;l++)j.r=I,j.g=P,j.b=k,j.a=_,j=j.next;for(d=n,l=1;l<=o;l++)g=d+i<<2,u+=(j.r=I=W[g])*(E=J-l),y+=(j.g=P=W[g+1])*E,f+=(j.b=k=W[g+2])*E,p+=(j.a=_=W[g+3])*E,C+=I,v+=P,D+=k,T+=_,j=j.next,l<B&&(d+=n);for(g=i,U=A,O=L,s=0;s<r;s++)W[(h=g<<2)+3]=_=p*V>>R,_>0?(_=255/_,W[h]=(u*V>>R)*_,W[h+1]=(y*V>>R)*_,W[h+2]=(f*V>>R)*_):W[h]=W[h+1]=W[h+2]=0,u-=m,y-=x,f-=b,p-=w,m-=U.r,x-=U.g,b-=U.b,w-=U.a,h=i+((h=s+J)<B?h:B)*n<<2,u+=C+=U.r=W[h],y+=v+=U.g=W[h+1],f+=D+=U.b=W[h+2],p+=T+=U.a=W[h+3],U=U.next,m+=I=O.r,x+=P=O.g,b+=k=O.b,w+=_=O.a,C-=I,v-=P,D-=k,T-=_,O=O.next,g+=n}return t},greyscale=t=>{const e=t.data.length;let a;for(let n=0;n<e;n+=4)a=.34*t.data[n]+.5*t.data[n+1]+.16*t.data[n+2],t.data[n]=a,t.data[n+1]=a,t.data[n+2]=a;return t},getEdgePoints=(t,e)=>{const a=t.width,n=t.height,r=t.data,o=[];var i,s,l,h,d,g,c,u,y;for(s=0;s<n;s+=2)for(i=0;i<a;i+=2){for(u=y=0,l=-1;l<=1;l++)if(c=(g=s+l)*a,g>=0&&g<n)for(h=-1;h<=1;h++)(d=i+h)>=0&&d<a&&(u+=r[d+c<<2],y++);y&&(u/=y),u>e&&o.push({x:i,y:s})}return o};function addVertex(t,e,a){let n=t+"|"+e;a[n]||(a[n]={x:t,y:e}),n=null}var getVerticesFromPoints=(t,e,a,n,r)=>{const o={},i=Math.max(~~(e*(1-a)),5),s=Math.round(Math.sqrt(i)),l=~~(n/s),h=~~(r/Math.round(Math.ceil(i/s)));let d=0,g=0,c=0,u=0;for(u=0;u<r;u+=h)for(c=g=++d%2==0?~~(l/2):0;c<n;c+=l)c<n&&u<r&&addVertex(~~(c+Math.cos(u)*h),~~(u+Math.sin(c)*l),o);addVertex(0,0,o),addVertex(n-1,0,o),addVertex(n-1,r-1,o),addVertex(0,r-1,o);const y=e-Object.keys(o).length,f=t.length,p=~~(f/y);if(e>0&&p>0){let e=0;for(e=0;e<f;e+=p)addVertex(t[e].x,t[e].y,o)}return t=null,Object.keys(o).map(t=>o[t])},getBoundingBox=t=>{let e=1/0,a=-1/0,n=1/0,r=-1/0;return t.forEach(t=>{t.x<e&&(e=t.x),t.y<n&&(n=t.y),t.x>a&&(a=t.x),t.y>r&&(r=t.y)}),{x:e,y:n,width:a-e,height:r-n}},addBoundingBoxesToPolygons=(t,e,a)=>(t.forEach(t=>{t.boundingBox=getBoundingBox([t.a,t.b,t.c])}),t.filter(t=>t.boundingBox.width>0&&t.boundingBox.height>0)),getColorByPos=(t,e,a)=>{let n=(0|clamp(t.x,1,e.width-2))+(0|clamp(t.y,1,e.height-2))*e.width<<2;n>=e.data.length&&(n=e.data.length-5);const r=e.data[n+3]/255;return a&&0===r?a:{r:e.data[n],g:e.data[n+1],b:e.data[n+2],a:r}},polygonCenter=t=>({x:.33333*(t.a.x+t.b.x+t.c.x),y:.33333*(t.a.y+t.b.y+t.c.y)}),isTransparent=t=>0===t.a;function strToColorArr(t){if("string"==typeof t){let e=[0,0,0,0];return"#"===t[0]&&(t.length<7&&(t=`#${t[1]}${t[1]}${t[2]}${t[2]}${t[3]}${t[3]}${t.length>4?t[4]+t[4]:""}`),e=[parseInt(t.substr(1,2),16),parseInt(t.substr(3,2),16),parseInt(t.substr(5,2),16),t.length>7?parseInt(t.substr(7,2),16)/255:1]),0===t.indexOf("rgb")&&(t.includes("rgba")||(t+=",1"),e=t.match(/[\.\d]+/g).map(t=>+t)),e}}function strToColor(t){const e=strToColorArr(t);if(e){const[t,a,n,r]=e;return{r:t,g:a,b:n,a:r}}}function addColorToPolygons(t,e,a){const{fill:n,stroke:r,strokeWidth:o,lineJoin:i,transparentColor:s}=a,l=!!n&&strToColor(n),h=!!r&&strToColor(r),d=(t,e)=>{const a=isTransparent(t)&&s;return e&&!a?e:a?s:t};return t.forEach(t=>{const a=getColorByPos(polygonCenter(t),e);n&&(t.fill=d(a,l)),r&&(t.strokeColor=d(a,h),t.strokeWidth=o,t.lineJoin=i)}),t}var luminance=t=>{const e=[t.r,t.g,t.b].map(t=>(t/=255)<=.03928?t/12.92:Math.pow((t+.055)/1.055,2.4));return.2126*e[0]+.7152*e[1]+.0722*e[2]},distance=(t,e)=>{let a=e.x-t.x,n=e.y-t.y;return Math.sqrt(a*a+n*n)};function addGradientsToPolygons(t,e,a){return t.forEach(t=>{let n={};"abc".split("").forEach(r=>{const o=getColorByPos(t[r],e,a.transparentColor);n[r]={key:r,color:o,x:t[r].x,y:t[r].y},n[r].luminance=luminance(n[r].color);const i="abc".replace(r,"").split("");n[r].median={x:(t[i[0]].x+t[i[1]].x)/2,y:(t[i[0]].y+t[i[1]].y)/2},n[r].medianColor=getColorByPos(n[r].median,e,a.transparentColor),n[r].medianLuminance=luminance(n[r].medianColor)});const r=[n.a,n.b,n.c].sort((t,e)=>Math.abs(t.luminance-t.medianLuminance)-Math.abs(e.luminance-e.medianLuminance)),o=r[0],i=r[0],s=o.median,l=[i],h=distance(i,s);for(let t=1,e=a.gradientStops-2;t<e;t++){const e=t*(h/a.gradientStops)/h,n={x:i.x+e*(s.x-i.x),y:i.y+e*(s.y-i.y)};l.push(n)}l.push(s),t.gradient={x1:o.x,y1:o.y,x2:o.median.x,y2:o.median.y,colors:l.map(t=>getColorByPos(t,e,a.transparentColor))},a.stroke&&(t.strokeWidth=a.strokeWidth,t.lineJoin=a.lineJoin),n=null}),t}var filterTransparentPolygons=(t,e)=>t.filter(t=>{const a=getColorByPos(polygonCenter(t),e);return!isTransparent(a)}),imageDataToPolygons=(t,e)=>{if(isImageData(t)){const a={width:t.width,height:t.height},n=copyImageData(t),r=copyImageData(t),o=stackblur(n,0,0,a.width,a.height,e.blur),i=greyscale(o),s=sobel(i).toImageData(),l=getEdgePoints(s,e.threshold),h=getVerticesFromPoints(l,e.vertexCount,e.accuracy,a.width,a.height);let d=delaunay_2(h);return d=addBoundingBoxesToPolygons(d),e.transparentColor||(d=filterTransparentPolygons(d,r)),d=!0===e.fill&&!0===e.gradients?addGradientsToPolygons(d,r,e):addColorToPolygons(d,r,e)}throw new Error("Can't work with the imageData provided. It seems to be corrupt.")};function browser(t){t=sanitizeInput(t);let e=!1,a=!1;const n=new Worker(URL.createObjectURL(new Blob(['function createCommonjsModule(t,e){return t(e={exports:{}},e.exports),e.exports}var delaunay=createCommonjsModule(function(t){function e(t,e,a){this.a=t,this.b=e,this.c=a;var n,r,o,i,s=e.x-t.x,l=e.y-t.y,h=a.x-t.x,d=a.y-t.y,g=s*(t.x+e.x)+l*(t.y+e.y),c=h*(t.x+a.x)+d*(t.y+a.y),u=2*(s*(a.y-e.y)-l*(a.x-e.x));Math.abs(u)<1e-6?(n=Math.min(t.x,e.x,a.x),r=Math.min(t.y,e.y,a.y),o=.5*(Math.max(t.x,e.x,a.x)-n),i=.5*(Math.max(t.y,e.y,a.y)-r),this.x=n+o,this.y=r+i,this.r=o*o+i*i):(this.x=(d*g-l*c)/u,this.y=(s*c-h*g)/u,o=this.x-t.x,i=this.y-t.y,this.r=o*o+i*i)}function a(t,e){return e.x-t.x}function n(t){var e,a,n,r,o,i=t.length;t:for(;i;)for(a=t[--i],e=t[--i],n=i;n;)if(o=t[--n],e===(r=t[--n])&&a===o||e===o&&a===r){t.splice(i,2),t.splice(n,2),i-=2;continue t}}e.prototype.draw=function(t){t.beginPath(),t.moveTo(this.a.x,this.a.y),t.lineTo(this.b.x,this.b.y),t.lineTo(this.c.x,this.c.y),t.closePath(),t.stroke()},t.exports={Triangle:e,triangulate:function(t){if(t.length<3)return[];t.sort(a);for(var r=t.length-1,o=t[r].x,i=t[0].x,s=t[r].y,l=s;r--;)t[r].y<s&&(s=t[r].y),t[r].y>l&&(l=t[r].y);var h,d,g,c=i-o,u=l-s,y=c>u?c:u,f=.5*(i+o),p=.5*(l+s),m=[new e({x:f-20*y,y:p-y,__sentinel:!0},{x:f,y:p+20*y,__sentinel:!0},{x:f+20*y,y:p-y,__sentinel:!0})],x=[],b=[];for(r=t.length;r--;){for(b.length=0,h=m.length;h--;)(c=t[r].x-m[h].x)>0&&c*c>m[h].r?(x.push(m[h]),m.splice(h,1)):c*c+(u=t[r].y-m[h].y)*u>m[h].r||(b.push(m[h].a,m[h].b,m[h].b,m[h].c,m[h].c,m[h].a),m.splice(h,1));for(n(b),h=b.length;h;)g=b[--h],d=b[--h],m.push(new e(d,g,t[r]))}for(Array.prototype.push.apply(x,m),r=x.length;r--;)(x[r].a.__sentinel||x[r].b.__sentinel||x[r].c.__sentinel)&&x.splice(r,1);return x}}}),delaunay_1=delaunay.Triangle,delaunay_2=delaunay.triangulate,sobel=createCommonjsModule(function(t,e){!function(a){function n(t){if(!(this instanceof n))return new n(t);var e=t.width,a=t.height,r=[[-1,0,1],[-2,0,2],[-1,0,1]],o=[[-1,-2,-1],[0,0,0],[1,2,1]],i=[],s=[];function l(t){return function(a,n,r){return t[4*(e*n+a)+(r=r||0)]}}var h,d,g=l(t.data);for(d=0;d<a;d++)for(h=0;h<e;h++){var c=(g(h,d,0)+g(h,d,1)+g(h,d,2))/3;s.push(c,c,c,255)}for(g=l(s),d=0;d<a;d++)for(h=0;h<e;h++){var u=r[0][0]*g(h-1,d-1)+r[0][1]*g(h,d-1)+r[0][2]*g(h+1,d-1)+r[1][0]*g(h-1,d)+r[1][1]*g(h,d)+r[1][2]*g(h+1,d)+r[2][0]*g(h-1,d+1)+r[2][1]*g(h,d+1)+r[2][2]*g(h+1,d+1),y=o[0][0]*g(h-1,d-1)+o[0][1]*g(h,d-1)+o[0][2]*g(h+1,d-1)+o[1][0]*g(h-1,d)+o[1][1]*g(h,d)+o[1][2]*g(h+1,d)+o[2][0]*g(h-1,d+1)+o[2][1]*g(h,d+1)+o[2][2]*g(h+1,d+1),f=Math.sqrt(u*u+y*y)>>>0;i.push(f,f,f,255)}var p=i;return"function"==typeof Uint8ClampedArray&&(p=new Uint8ClampedArray(i)),p.toImageData=function(){return n.toImageData(p,e,a)},p}function r(t,e,a){return{width:e,height:a,data:t}}n.toImageData=function(t,e,a){if("function"==typeof ImageData&&"[object Uint16Array]"===Object.prototype.toString.call(t))return new ImageData(t,e,a);if("object"==typeof window&&"object"==typeof window.document){var n=document.createElement("canvas");if("function"==typeof n.getContext){var o=n.getContext("2d").createImageData(e,a);return o.data.set(t),o}return new r(t,e,a)}return new r(t,e,a)},t.exports&&(e=t.exports=n),e.Sobel=n}()}),sobel_1=sobel.Sobel,isImageData=t=>t&&"number"==typeof t.width&&"number"==typeof t.height&&t.data&&"number"==typeof t.data.length&&"object"==typeof t.data;class Canvas{constructor(t=300,e=150){"undefined"==typeof window?(this.canvasEl={width:t,height:e},this.ctx=null):(this.canvasEl=document.createElement("canvas"),this.canvasEl.width=t,this.canvasEl.height=e,this.ctx=this.canvasEl.getContext("2d"))}getContext(){return this.ctx}toDataURL(t,e,a){if("function"!=typeof a)return this.canvasEl.toDataURL(t,e);a(this.canvasEl.toDataURL(t,e))}get width(){return this.canvasEl.width}set width(t){this.canvasEl.width=t}get height(){return this.canvasEl.height}set height(t){this.canvasEl.height=t}}"undefined"!=typeof window&&(Canvas.Image=Image);var copyImageData=t=>{if(isImageData(t)){if("undefined"==typeof Uint8ClampedArray){if("undefined"==typeof window)throw new Error("Can\'t copy imageData in webworker without Uint8ClampedArray support.");return copyImageDataWithCanvas(t)}{const e=new Uint8ClampedArray(t.data);if("undefined"==typeof ImageData)return{width:t.width,height:t.height,data:e};{let a;try{a=new ImageData(e,t.width,t.height)}catch(e){if("undefined"==typeof window)throw new Error("Can\'t copy imageData in webworker without proper ImageData() support.");a=copyImageDataWithCanvas(t)}return a}}}throw new Error("Given imageData object is not useable.")};function copyImageDataWithCanvas(t){const e=new Canvas(t.width,t.height).getContext("2d");return e.putImageData(t,0,0),e.getImageData(0,0,t.width,t.height)}const mul_table=[512,512,456,512,328,456,335,512,405,328,271,456,388,335,292,512,454,405,364,328,298,271,496,456,420,388,360,335,312,292,273,512,482,454,428,405,383,364,345,328,312,298,284,271,259,496,475,456,437,420,404,388,374,360,347,335,323,312,302,292,282,273,265,512,497,482,468,454,441,428,417,405,394,383,373,364,354,345,337,328,320,312,305,298,291,284,278,271,265,259,507,496,485,475,465,456,446,437,428,420,412,404,396,388,381,374,367,360,354,347,341,335,329,323,318,312,307,302,297,292,287,282,278,273,269,265,261,512,505,497,489,482,475,468,461,454,447,441,435,428,422,417,411,405,399,394,389,383,378,373,368,364,359,354,350,345,341,337,332,328,324,320,316,312,309,305,301,298,294,291,287,284,281,278,274,271,268,265,262,259,257,507,501,496,491,485,480,475,470,465,460,456,451,446,442,437,433,428,424,420,416,412,408,404,400,396,392,388,385,381,377,374,370,367,363,360,357,354,350,347,344,341,338,335,332,329,326,323,320,318,315,312,310,307,304,302,299,297,294,292,289,287,285,282,280,278,275,273,271,269,267,265,263,261,259],shg_table=[9,11,12,13,13,14,14,15,15,15,15,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24];function BlurStack(){this.r=0,this.g=0,this.b=0,this.a=0,this.next=null}var stackblur=(t,e,a,n,r,o)=>{var i,s,l,h,d,g,c,u,y,f,p,m,x,b,w,v,C,D,I,E,M,P,T,B,_=t.data,k=o+o+1,j=n-1,S=r-1,A=o+1,U=A*(A+1)/2,V=new BlurStack,W=V;for(l=1;l<k;l++)if(W=W.next=new BlurStack,l==A)var $=W;W.next=V;var J=null,L=null;c=g=0;var O=mul_table[o],q=shg_table[o];for(s=0;s<r;s++){for(v=C=D=I=u=y=f=p=0,m=A*(E=_[g]),x=A*(M=_[g+1]),b=A*(P=_[g+2]),w=A*(T=_[g+3]),u+=U*E,y+=U*M,f+=U*P,p+=U*T,W=V,l=0;l<A;l++)W.r=E,W.g=M,W.b=P,W.a=T,W=W.next;for(l=1;l<A;l++)h=g+((j<l?j:l)<<2),u+=(W.r=E=_[h])*(B=A-l),y+=(W.g=M=_[h+1])*B,f+=(W.b=P=_[h+2])*B,p+=(W.a=T=_[h+3])*B,v+=E,C+=M,D+=P,I+=T,W=W.next;for(J=V,L=$,i=0;i<n;i++)_[g+3]=T=p*O>>q,0!=T?(T=255/T,_[g]=(u*O>>q)*T,_[g+1]=(y*O>>q)*T,_[g+2]=(f*O>>q)*T):_[g]=_[g+1]=_[g+2]=0,u-=m,y-=x,f-=b,p-=w,m-=J.r,x-=J.g,b-=J.b,w-=J.a,h=c+((h=i+o+1)<j?h:j)<<2,u+=v+=J.r=_[h],y+=C+=J.g=_[h+1],f+=D+=J.b=_[h+2],p+=I+=J.a=_[h+3],J=J.next,m+=E=L.r,x+=M=L.g,b+=P=L.b,w+=T=L.a,v-=E,C-=M,D-=P,I-=T,L=L.next,g+=4;c+=n}for(i=0;i<n;i++){for(C=D=I=v=y=f=p=u=0,m=A*(E=_[g=i<<2]),x=A*(M=_[g+1]),b=A*(P=_[g+2]),w=A*(T=_[g+3]),u+=U*E,y+=U*M,f+=U*P,p+=U*T,W=V,l=0;l<A;l++)W.r=E,W.g=M,W.b=P,W.a=T,W=W.next;for(d=n,l=1;l<=o;l++)g=d+i<<2,u+=(W.r=E=_[g])*(B=A-l),y+=(W.g=M=_[g+1])*B,f+=(W.b=P=_[g+2])*B,p+=(W.a=T=_[g+3])*B,v+=E,C+=M,D+=P,I+=T,W=W.next,l<S&&(d+=n);for(g=i,J=V,L=$,s=0;s<r;s++)_[(h=g<<2)+3]=T=p*O>>q,T>0?(T=255/T,_[h]=(u*O>>q)*T,_[h+1]=(y*O>>q)*T,_[h+2]=(f*O>>q)*T):_[h]=_[h+1]=_[h+2]=0,u-=m,y-=x,f-=b,p-=w,m-=J.r,x-=J.g,b-=J.b,w-=J.a,h=i+((h=s+A)<S?h:S)*n<<2,u+=v+=J.r=_[h],y+=C+=J.g=_[h+1],f+=D+=J.b=_[h+2],p+=I+=J.a=_[h+3],J=J.next,m+=E=L.r,x+=M=L.g,b+=P=L.b,w+=T=L.a,v-=E,C-=M,D-=P,I-=T,L=L.next,g+=n}return t},greyscale=t=>{const e=t.data.length;let a;for(let n=0;n<e;n+=4)a=.34*t.data[n]+.5*t.data[n+1]+.16*t.data[n+2],t.data[n]=a,t.data[n+1]=a,t.data[n+2]=a;return t},getEdgePoints=(t,e)=>{const a=t.width,n=t.height,r=t.data,o=[];var i,s,l,h,d,g,c,u,y;for(s=0;s<n;s+=2)for(i=0;i<a;i+=2){for(u=y=0,l=-1;l<=1;l++)if(c=(g=s+l)*a,g>=0&&g<n)for(h=-1;h<=1;h++)(d=i+h)>=0&&d<a&&(u+=r[d+c<<2],y++);y&&(u/=y),u>e&&o.push({x:i,y:s})}return o},clamp=(t,e,a)=>t<e?e:t>a?a:t;function addVertex(t,e,a){let n=t+"|"+e;a[n]||(a[n]={x:t,y:e}),n=null}var getVerticesFromPoints=(t,e,a,n,r)=>{const o={},i=Math.max(~~(e*(1-a)),5),s=Math.round(Math.sqrt(i)),l=~~(n/s),h=~~(r/Math.round(Math.ceil(i/s)));let d=0,g=0,c=0,u=0;for(u=0;u<r;u+=h)for(c=g=++d%2==0?~~(l/2):0;c<n;c+=l)c<n&&u<r&&addVertex(~~(c+Math.cos(u)*h),~~(u+Math.sin(c)*l),o);addVertex(0,0,o),addVertex(n-1,0,o),addVertex(n-1,r-1,o),addVertex(0,r-1,o);const y=e-Object.keys(o).length,f=t.length,p=~~(f/y);if(e>0&&p>0){let e=0;for(e=0;e<f;e+=p)addVertex(t[e].x,t[e].y,o)}return t=null,Object.keys(o).map(t=>o[t])},getBoundingBox=t=>{let e=1/0,a=-1/0,n=1/0,r=-1/0;return t.forEach(t=>{t.x<e&&(e=t.x),t.y<n&&(n=t.y),t.x>a&&(a=t.x),t.y>r&&(r=t.y)}),{x:e,y:n,width:a-e,height:r-n}},addBoundingBoxesToPolygons=(t,e,a)=>(t.forEach(t=>{t.boundingBox=getBoundingBox([t.a,t.b,t.c])}),t.filter(t=>t.boundingBox.width>0&&t.boundingBox.height>0)),getColorByPos=(t,e,a)=>{let n=(0|clamp(t.x,1,e.width-2))+(0|clamp(t.y,1,e.height-2))*e.width<<2;n>=e.data.length&&(n=e.data.length-5);const r=e.data[n+3]/255;return a&&0===r?a:{r:e.data[n],g:e.data[n+1],b:e.data[n+2],a:r}},polygonCenter=t=>({x:.33333*(t.a.x+t.b.x+t.c.x),y:.33333*(t.a.y+t.b.y+t.c.y)}),isTransparent=t=>0===t.a;function strToColorArr(t){if("string"==typeof t){let e=[0,0,0,0];return"#"===t[0]&&(t.length<7&&(t=`#${t[1]}${t[1]}${t[2]}${t[2]}${t[3]}${t[3]}${t.length>4?t[4]+t[4]:""}`),e=[parseInt(t.substr(1,2),16),parseInt(t.substr(3,2),16),parseInt(t.substr(5,2),16),t.length>7?parseInt(t.substr(7,2),16)/255:1]),0===t.indexOf("rgb")&&(t.includes("rgba")||(t+=",1"),e=t.match(/[\\.\\d]+/g).map(t=>+t)),e}}function strToColor(t){const e=strToColorArr(t);if(e){const[t,a,n,r]=e;return{r:t,g:a,b:n,a:r}}}function addColorToPolygons(t,e,a){const{fill:n,stroke:r,strokeWidth:o,lineJoin:i,transparentColor:s}=a,l=!!n&&strToColor(n),h=!!r&&strToColor(r),d=(t,e)=>{const a=isTransparent(t)&&s;return e&&!a?e:a?s:t};return t.forEach(t=>{const a=getColorByPos(polygonCenter(t),e);n&&(t.fill=d(a,l)),r&&(t.strokeColor=d(a,h),t.strokeWidth=o,t.lineJoin=i)}),t}var luminance=t=>{const e=[t.r,t.g,t.b].map(t=>(t/=255)<=.03928?t/12.92:Math.pow((t+.055)/1.055,2.4));return.2126*e[0]+.7152*e[1]+.0722*e[2]},distance=(t,e)=>{let a=e.x-t.x,n=e.y-t.y;return Math.sqrt(a*a+n*n)};function addGradientsToPolygons(t,e,a){return t.forEach(t=>{let n={};"abc".split("").forEach(r=>{const o=getColorByPos(t[r],e,a.transparentColor);n[r]={key:r,color:o,x:t[r].x,y:t[r].y},n[r].luminance=luminance(n[r].color);const i="abc".replace(r,"").split("");n[r].median={x:(t[i[0]].x+t[i[1]].x)/2,y:(t[i[0]].y+t[i[1]].y)/2},n[r].medianColor=getColorByPos(n[r].median,e,a.transparentColor),n[r].medianLuminance=luminance(n[r].medianColor)});const r=[n.a,n.b,n.c].sort((t,e)=>Math.abs(t.luminance-t.medianLuminance)-Math.abs(e.luminance-e.medianLuminance)),o=r[0],i=r[0],s=o.median,l=[i],h=distance(i,s);for(let t=1,e=a.gradientStops-2;t<e;t++){const e=t*(h/a.gradientStops)/h,n={x:i.x+e*(s.x-i.x),y:i.y+e*(s.y-i.y)};l.push(n)}l.push(s),t.gradient={x1:o.x,y1:o.y,x2:o.median.x,y2:o.median.y,colors:l.map(t=>getColorByPos(t,e,a.transparentColor))},a.stroke&&(t.strokeWidth=a.strokeWidth,t.lineJoin=a.lineJoin),n=null}),t}var filterTransparentPolygons=(t,e)=>t.filter(t=>{const a=getColorByPos(polygonCenter(t),e);return!isTransparent(a)}),imageDataToPolygons=(t,e)=>{if(isImageData(t)){const a={width:t.width,height:t.height},n=copyImageData(t),r=copyImageData(t),o=stackblur(n,0,0,a.width,a.height,e.blur),i=greyscale(o),s=sobel(i).toImageData(),l=getEdgePoints(s,e.threshold),h=getVerticesFromPoints(l,e.vertexCount,e.accuracy,a.width,a.height);let d=delaunay_2(h);return d=addBoundingBoxesToPolygons(d),e.transparentColor||(d=filterTransparentPolygons(d,r)),d=!0===e.fill&&!0===e.gradients?addGradientsToPolygons(d,r,e):addColorToPolygons(d,r,e)}throw new Error("Can\'t work with the imageData provided. It seems to be corrupt.")};onmessage=(t=>{if(t.data.imageData&&t.data.params)try{let e=t.data.imageData;void 0===e.width&&"number"==typeof t.data.imageDataWidth&&(e.width=t.data.imageDataWidth),void 0===e.height&&"number"==typeof t.data.imageDataHeight&&(e.height=t.data.imageDataHeight);const a=imageDataToPolygons(t.data.imageData,t.data.params);self.postMessage({polygonJSONStr:JSON.stringify(a)})}catch(t){self.postMessage({err:t.message||t})}else t.data.imageData?self.postMessage({err:"Parameters are missing."}):self.postMessage({err:"ImageData is missing."});self.close()});'],{type:"text/javascript"})));let r,o;const i={getParams:function(){return t},getInput:h,getOutput:d},s={fromImage:function(t){return g(fromImageToImageData,t)},fromImageSync:function(t){return g(fromImageToImageData,t,!0)},fromImageData:function(t){return g(t=>t,t)},fromImageDataSync:function(t){return g(t=>t,t,!0)}},l={toData:function(t){return c(t=>t,t)},toDataSync:function(t){return c(t=>t,t,!0)},toDataURL:function(t){return c(polygonsToDataURL,t)},toDataURLSync:function(t){return c(polygonsToDataURL,t,!0)},toImageData:function(t){return c(polygonsToImageData,t)},toImageDataSync:function(t){return c(polygonsToImageData,t,!0)},toSVG:function(t){return c(polygonsToSVG,t)},toSVGSync:function(t){return c(polygonsToSVG,t,!0)}};function h(){let t=objectAssign({},i);return r||objectAssign(t,s),t}function d(){let t=objectAssign({},i);return o||objectAssign(t,l),t}function g(t,a,n){return e=!!n,r=function(){return e?t(a):new Promise((e,n)=>{try{e(t(a))}catch(t){n(t)}})},u()?y():d()}function c(t,e,n){return a=!!n,o=((n,r)=>a?t(n,r,e):new Promise((a,o)=>{try{a(t(n,r,e))}catch(t){o(t)}})),u()?y():h()}function u(){return r&&o}function y(){if(e&&a){const e=r(t),a=imageDataToPolygons(e,t);return o(a,e)}return new Promise((i,s)=>{let h;new Promise((t,a)=>{if(e)try{const e=r(l);t(e)}catch(t){a(t)}else r(l).then(t,a)}).then(e=>(function(t,e){return new Promise((a,r)=>{n.addEventListener("message",t=>{if(t.data&&t.data.polygonJSONStr){const e=JSON.parse(t.data.polygonJSONStr);a(e)}else t.data&&t.data.err?r(t.data.err):r(t)}),n.postMessage({params:e,imageData:t,imageDataWidth:t.width,imageDataHeight:t.height})})})(h=e,t),s).then(t=>(t=t,h=h,new Promise((e,n)=>{if(a)try{const a=o(t,h);e(a)}catch(t){n(t)}else o(t,h).then(e,n)})),s).then(t=>{i(t)},s)});var i,s,l}return h()}export default browser;